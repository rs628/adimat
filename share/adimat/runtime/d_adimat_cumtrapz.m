% Generated by ADiMat 0.6.0-4867
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2013 Johannes Willkomm <johannes.willkomm@sc.tu-darmstadt.de>
% RWTH Aachen University, 52056 Aachen, Germany
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Flags: FORWARDMODE,  NOOPEROPTIM,
%   NOLOCALCSE,  NOGLOBALCSE,  NOPRESCALARFOLDING,
%   NOPOSTSCALARFOLDING,  NOCONSTFOLDMULT0,  FUNCMODE,
%   NOTMPCLEAR,  DUMP_XML,  PARSE_ONLY,
%   UNBOUND_ERROR
%
% Parameters:
%  - dependents=z
%  - independents=a, b
%  - inputEncoding=ISO-8859-1
%  - output-mode: plain
%  - output-file: ad_out/d_adimat_cumtrapz.m
%  - output-file-prefix: 
%  - output-directory: ad_out
% Generated by ADiMat 0.6.0-4867
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2013 Johannes Willkomm <johannes.willkomm@sc.tu-darmstadt.de>
% RWTH Aachen University, 52056 Aachen, Germany
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Flags: FORWARDMODE,  NOOPEROPTIM,
%   NOLOCALCSE,  NOGLOBALCSE,  NOPRESCALARFOLDING,
%   NOPOSTSCALARFOLDING,  NOCONSTFOLDMULT0,  FUNCMODE,
%   NOTMPCLEAR,  DUMP_XML,  PARSE_ONLY,
%   UNBOUND_ERROR
%
% Parameters:
%  - dependents=z
%  - independents=a, b
%  - inputEncoding=ISO-8859-1
%  - output-mode: plain
%  - output-file: ad_out/d_adimat_cumtrapz.m
%  - output-file-prefix: 
%  - output-directory: ad_out
%
% Functions in this file: d_adimat_cumtrapz, d_adimat_cumtrapz_uni1,
%  adimat_cumtrapz_uni1, d_adimat_cumtrapz_uni2, adimat_cumtrapz_uni2,
%  d_adimat_cumtrapz_nonuni2, adimat_cumtrapz_nonuni2, d_adimat_cumtrapz_nonuni3,
%  adimat_cumtrapz_nonuni3
%

function [d_z z] = d_adimat_cumtrapz(d_a, a, d_b, b, c)
   narginwrapper = [0 1 0 2 3];
   if narginwrapper(nargin) == 1
      [d_z z] = d_adimat_cumtrapz_uni1(d_a, a);
   elseif narginwrapper(nargin) == 2
      if isscalar(b)
         [d_z z] = d_adimat_cumtrapz_uni2(d_a, a, d_b, b);
      else
         [d_z z] = d_adimat_cumtrapz_nonuni2(d_a, a, d_b, b);
      end
   else
      [d_z z] = d_adimat_cumtrapz_nonuni3(d_a, a, d_b, b, c);
   end
end

function [d_z z] = d_adimat_cumtrapz_uni1(d_Y, Y)
   dim = adimat_first_nonsingleton(Y);
   [d_z z] = d_adimat_cumtrapz_uni2(d_Y, Y, d_zeros(dim), dim);
end

function z = adimat_cumtrapz_uni1(Y)
   dim = adimat_first_nonsingleton(Y);
   z = adimat_cumtrapz_uni2(Y, dim);
end

function [d_z z] = d_adimat_cumtrapz_uni2(d_Y, Y, d_dim, dim)
   len = size(Y, dim);
   if len < 2
      tmpda1 = size(Y);
      z = zeros(tmpda1);
      d_z = d_zeros(z);
   else
      inds = repmat({':'}, [length(size(Y)) 1]);
      inds{dim} = 1 : len-1;
      d_Y1 = d_Y(:, inds{:});
      Y1 = Y(inds{:});
      inds{dim} = 2 : len;
      d_Y2 = d_Y(:, inds{:});
      Y2 = Y(inds{:});
      d_tmpca3 = adimat_diff_cumsum2(d_Y2, Y2, dim);
      tmpca3 = cumsum(Y2, dim);
      d_tmpca2 = adimat_diff_cumsum2(d_Y1, Y1, dim);
      tmpca2 = cumsum(Y1, dim);
      d_tmpca1 = adimat_opdiff_sum(d_tmpca2, d_tmpca3);
      tmpca1 = tmpca2 + tmpca3;
      d_z = adimat_opdiff_emult_left(0.5, d_tmpca1, tmpca1);
      z = 0.5 .* tmpca1;
      sy = size(Y);
      sy(dim) = 1;
      tmpda1 = zeros(sy);
      d_z = adimat_diff_cat(dim, d_zeros(tmpda1), tmpda1, d_z, z);
      z = cat(dim, tmpda1, z);
   end
end

function z = adimat_cumtrapz_uni2(Y, dim)
   len = size(Y, dim);
   if len < 2
      tmpda1 = size(Y);
      z = zeros(tmpda1);
   else
      inds = repmat({':'}, [length(size(Y)) 1]);
      inds{dim} = 1 : len-1;
      Y1 = Y(inds{:});
      inds{dim} = 2 : len;
      Y2 = Y(inds{:});
      tmpca3 = cumsum(Y2, dim);
      tmpca2 = cumsum(Y1, dim);
      tmpca1 = tmpca2 + tmpca3;
      z = 0.5 .* tmpca1;
      sy = size(Y);
      sy(dim) = 1;
      tmpda1 = zeros(sy);
      z = cat(dim, tmpda1, z);
   end
end

function [d_z z] = d_adimat_cumtrapz_nonuni2(d_X, X, d_Y, Y, dim)
   dim = adimat_first_nonsingleton(Y);
   [d_z z] = d_adimat_cumtrapz_nonuni3(d_X, X, d_Y, Y, dim);
end

function z = adimat_cumtrapz_nonuni2(X, Y, dim)
   dim = adimat_first_nonsingleton(Y);
   z = adimat_cumtrapz_nonuni3(X, Y, dim);
end

function [d_z z] = d_adimat_cumtrapz_nonuni3(d_X, X, d_Y, Y, dim)
   len = size(Y, dim);
   if len < 2
      tmpda1 = size(Y);
      z = zeros(tmpda1);
      d_z = d_zeros(z);
   else
      ndim = length(size(Y));
      d_D = adimat_diff_diff(d_X, X);
      D = diff(X);
      a = 0;
      b = sum(D);
      N = len;
      tmpda5 = ndim - dim;
      tmpda4 = ones(1, tmpda5);
      tmpda3 = len - 1;
      tmpda2 = dim - 1;
      tmpda1 = ones(1, tmpda2);
      [d_D D] = adimat_diff_reshape(d_D, D, [tmpda1 tmpda3 tmpda4]);
      sy1 = size(Y);
      sy1(dim) = 1;
      d_D = adimat_diff_repmat1(d_D, D, sy1);
      D = repmat(D, sy1);
      inds = repmat({':'}, [length(size(Y)) 1]);
      inds{dim} = 1 : len-1;
      d_Y1 = d_Y(:, inds{:});
      Y1 = Y(inds{:});
      inds{dim} = 2 : len;
      d_Y2 = d_Y(:, inds{:});
      Y2 = Y(inds{:});
      d_tmpca5 = adimat_opdiff_emult(d_Y2, Y2, d_D, D);
      tmpca5 = Y2 .* D;
      d_tmpca4 = adimat_diff_cumsum2(d_tmpca5, tmpca5, dim);
      tmpca4 = cumsum(tmpca5, dim);
      d_tmpca3 = adimat_opdiff_emult(d_Y1, Y1, d_D, D);
      tmpca3 = Y1 .* D;
      d_tmpca2 = adimat_diff_cumsum2(d_tmpca3, tmpca3, dim);
      tmpca2 = cumsum(tmpca3, dim);
      d_tmpca1 = adimat_opdiff_sum(d_tmpca2, d_tmpca4);
      tmpca1 = tmpca2 + tmpca4;
      d_z = adimat_opdiff_mult_left(0.5, d_tmpca1, tmpca1);
      z = 0.5 * tmpca1;
      tmpda1 = zeros(sy1);
      d_z = adimat_diff_cat(dim, d_zeros(tmpda1), tmpda1, d_z, z);
      z = cat(dim, tmpda1, z);
   end
end
% $Id: adimat_cumtrapz.m 4860 2015-02-07 13:49:39Z willkomm $

function z = adimat_cumtrapz_nonuni3(X, Y, dim)
   len = size(Y, dim);
   if len < 2
      tmpda1 = size(Y);
      z = zeros(tmpda1);
   else
      ndim = length(size(Y));
      D = diff(X);
      a = 0;
      b = sum(D);
      N = len;
      tmpda5 = ndim - dim;
      tmpda4 = ones(1, tmpda5);
      tmpda3 = len - 1;
      tmpda2 = dim - 1;
      tmpda1 = ones(1, tmpda2);
      D = reshape(D, [tmpda1 tmpda3 tmpda4]);
      sy1 = size(Y);
      sy1(dim) = 1;
      D = repmat(D, sy1);
      inds = repmat({':'}, [length(size(Y)) 1]);
      inds{dim} = 1 : len-1;
      Y1 = Y(inds{:});
      inds{dim} = 2 : len;
      Y2 = Y(inds{:});
      tmpca5 = Y2 .* D;
      tmpca4 = cumsum(tmpca5, dim);
      tmpca3 = Y1 .* D;
      tmpca2 = cumsum(tmpca3, dim);
      tmpca1 = tmpca2 + tmpca4;
      z = 0.5 * tmpca1;
      tmpda1 = zeros(sy1);
      z = cat(dim, tmpda1, z);
   end
end
% $Id: adimat_cumtrapz.m 4860 2015-02-07 13:49:39Z willkomm $
