% Generated by ADiMat 0.6.0-4867
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2013 Johannes Willkomm <johannes.willkomm@sc.tu-darmstadt.de>
% RWTH Aachen University, 52056 Aachen, Germany
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Flags: FORWARDMODE,  NOOPEROPTIM,
%   NOLOCALCSE,  NOGLOBALCSE,  NOPRESCALARFOLDING,
%   NOPOSTSCALARFOLDING,  NOCONSTFOLDMULT0,  FUNCMODE,
%   NOTMPCLEAR,  DUMP_XML,  PARSE_ONLY,
%   UNBOUND_ERROR
%
% Parameters:
%  - dependents=z
%  - independents=a
%  - inputEncoding=ISO-8859-1
%  - output-mode: plain
%  - output-file: ad_out/d_adimat_sol_qr1.m
%  - output-file-prefix: 
%  - output-directory: ad_out
% Generated by ADiMat 0.6.0-4867
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2013 Johannes Willkomm <johannes.willkomm@sc.tu-darmstadt.de>
% RWTH Aachen University, 52056 Aachen, Germany
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Flags: FORWARDMODE,  NOOPEROPTIM,
%   NOLOCALCSE,  NOGLOBALCSE,  NOPRESCALARFOLDING,
%   NOPOSTSCALARFOLDING,  NOCONSTFOLDMULT0,  FUNCMODE,
%   NOTMPCLEAR,  DUMP_XML,  PARSE_ONLY,
%   UNBOUND_ERROR
%
% Parameters:
%  - dependents=z
%  - independents=a
%  - inputEncoding=ISO-8859-1
%  - output-mode: plain
%  - output-file: ad_out/d_adimat_sol_qr1.m
%  - output-file-prefix: 
%  - output-directory: ad_out
%
% Functions in this file: d_adimat_sol_qr
%

function [d_z z] = d_adimat_sol_qr(d_a, a, b)
   z = [];
   d_z = d_zeros(z);
   q = [];
   d_q = d_zeros(q);
   r = [];
   d_r = d_zeros(r);
   r1 = [];
   d_r1 = d_zeros(r1);
   tmpda3 = [];
   tmpda2 = [];
   tmpda1 = [];
   t = [];
   d_t = d_zeros(t);
   q1 = [];
   d_q1 = d_zeros(q1);
   tmpca1 = [];
   d_tmpca1 = d_zeros(tmpca1);
   [m n] = size(a);
   if m < n
      [d_q q d_r r] = adimat_diff_qr(adimat_opdiff_trans(d_a, a), a');
      d_r1 = adimat_opdiff_subsref(d_r, struct('type', '()', 'subs', {{1 : m ':'}}));
      r1 = r(1 : m, :);
      tmpda3 = true;
      tmpda2 = true;
      tmpda1 = struct('UT', tmpda2, 'TRANSA', tmpda3);
      [d_t t] = adimat_diff_linsolve(d_r1, r1, d_zeros(b), b, tmpda1);
      tmpda3 = size(b, 2);
      tmpda2 = n - m;
      tmpda1 = zeros(tmpda2, tmpda3);
      d_z = adimat_opdiff_mult(d_q, q, adimat_fdiff_cat(2, adimat_fdiff_cat(3, d_t), adimat_fdiff_cat(3, d_zeros(tmpda1))), [t
                               tmpda1]);
      z = q * [t
            tmpda1];
   else
      [d_q q d_r r] = adimat_diff_qr(d_a, a);
      d_q1 = adimat_opdiff_subsref(d_q, struct('type', '()', 'subs', {{':' 1 : n}}));
      q1 = q(:, 1 : n);
      d_r1 = adimat_opdiff_subsref(d_r, struct('type', '()', 'subs', {{1 : n ':'}}));
      r1 = r(1 : n, :);
      tmpda3 = true;
      tmpda2 = struct('UT', tmpda3);
      d_tmpca1 = adimat_opdiff_mult_right(adimat_opdiff_trans(d_q1, q1), q1', b);
      tmpca1 = q1' * b;
      [d_z z] = adimat_diff_linsolve(d_r1, r1, d_tmpca1, tmpca1, tmpda2);
   end
end
