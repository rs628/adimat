% Generated by ADiMat 0.6.2-5249 (10432437)
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2015 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to johannes@johannes-willkomm.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=r
%  - independents=b
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: a_adimat_fftconv2, rec_adimat_fftconv2,
%  ret_adimat_fftconv2, a_adimat_fftconv, rec_adimat_fftconv,
%  ret_adimat_fftconv, a_adimat_prepad2, rec_adimat_prepad2,
%  ret_adimat_prepad2, a_adimat_postpad2, rec_adimat_postpad2,
%  ret_adimat_postpad2, a_adimat_prepad, rec_adimat_prepad,
%  ret_adimat_prepad, a_adimat_postpad, rec_adimat_postpad,
%  ret_adimat_postpad
%

function [a_b nr_r] = a_adimat_fftconv2(a, b, a_r)
   r = rec_adimat_fftconv(a, b, 0);
   nr_r = r;
   a_b = a_zeros1(b);
   if nargin < 3
      a_r = a_zeros1(r);
   end
   [tmpadjc2] = ret_adimat_fftconv(a_r);
   a_b = adimat_adjsum(a_b, tmpadjc2);
end

function r = rec_adimat_fftconv2(a, b)
   r = rec_adimat_fftconv(a, b, 0);
   adimat_push(r, a, b);
end

function a_b = ret_adimat_fftconv2(a_r)
   [b a r] = adimat_pop;
   a_b = a_zeros1(b);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   [tmpadjc2] = ret_adimat_fftconv(a_r);
   a_b = adimat_adjsum(a_b, tmpadjc2);
end

function [a_b_ nr_r] = a_adimat_fftconv(a_, b_, ignored, a_r)
   tmpca1 = 0;
   tmpca2 = 0;
   tmpca3 = 0;
   tmpca4 = 0;
   tmpca5 = 0;
   tmpca6 = 0;
   tmpda1 = 0;
   tmpda2 = 0;
   tmpda3 = 0;
   r = 0;
   a = 0;
   b = 0;
   n = 0;
   la = 0;
   lb = 0;
   bo = 0;
   ap = 0;
   bp = 0;
   tmpba1 = 0;
   if isscalar(a_) || isscalar(b_)
      tmpba1 = 1;
      adimat_push1(r);
      r = a_ .* b_;
   else
      adimat_push1(a);
      a = a_(:);
      adimat_push1(b);
      b = b_(:);
      adimat_push1(n);
      n = length(a) + length(b) - 1;
      adimat_push1(la);
      la = length(a);
      adimat_push1(lb);
      lb = length(b);
      adimat_push1(bo);
      bo = mod(la, 2)==1 & mod(lb, 2)==1;
      adimat_push1(tmpda3);
      tmpda3 = lb / 2;
      adimat_push1(tmpda2);
      tmpda2 = ceil(tmpda3);
      adimat_push1(tmpda1);
      tmpda1 = adimat_postpad2(a, la + tmpda2 - 1 - bo);
      adimat_push1(ap);
      ap = adimat_prepad2(tmpda1, n);
      adimat_push1(tmpda3);
      tmpda3 = la / 2;
      adimat_push1(tmpda2);
      tmpda2 = ceil(tmpda3);
      adimat_push1(tmpca1);
      tmpca1 = rec_adimat_postpad2(b, tmpda2 + lb - 1);
      adimat_push1(bp);
      bp = rec_adimat_prepad2(tmpca1, n);
      adimat_push1(tmpca6);
      tmpca6 = fftshift(bp);
      adimat_push1(tmpca5);
      tmpca5 = fft(tmpca6);
      adimat_push1(tmpca4);
      tmpca4 = fftshift(ap);
      adimat_push1(tmpca3);
      tmpca3 = fft(tmpca4);
      adimat_push1(tmpca2);
      tmpca2 = tmpca3 .* tmpca5;
      adimat_push1(tmpca1);
      tmpca1 = ifft(tmpca2);
      adimat_push1(r);
      r = ifftshift(tmpca1);
      tmpba2 = 0;
      if size(b_, 2) > 1
         tmpba2 = 1;
         adimat_push1(r);
         r = r.';
      end
      adimat_push1(tmpba2);
   end
   adimat_push1(tmpba1);
   nr_r = r;
   [a_b a_ap a_bp a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_tmpda1 a_b_] = a_zeros(b, ap, bp, tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpda1, b_);
   if nargin < 4
      a_r = a_zeros1(r);
   end
   tmpba1 = adimat_pop1;
   if tmpba1 == 1
      r = adimat_pop1;
      a_b_ = adimat_adjsum(a_b_, adimat_adjred(b_, a_ .* a_r));
      a_r = a_zeros1(r);
   else
      tmpba2 = adimat_pop1;
      if tmpba2 == 1
         r = adimat_pop1;
         tmpsa1 = a_r;
         a_r = a_zeros1(r);
         a_r = adimat_adjsum(a_r, tmpsa1.');
      end
      r = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, call(@fftshift, a_r));
      a_r = a_zeros1(r);
      tmpca1 = adimat_pop1;
      a_tmpca2 = adimat_adjsum(a_tmpca2, a_ifft(a_tmpca1, 1, tmpca2));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpca2 = adimat_pop1;
      a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* tmpca5));
      a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjred(tmpca5, tmpca3 .* a_tmpca2));
      a_tmpca2 = a_zeros1(tmpca2);
      tmpca3 = adimat_pop1;
      a_tmpca4 = adimat_adjsum(a_tmpca4, a_fft(a_tmpca3, 1, tmpca4));
      a_tmpca3 = a_zeros1(tmpca3);
      tmpca4 = adimat_pop1;
      a_ap = adimat_adjsum(a_ap, call(@ifftshift, a_tmpca4));
      a_tmpca4 = a_zeros1(tmpca4);
      tmpca5 = adimat_pop1;
      a_tmpca6 = adimat_adjsum(a_tmpca6, a_fft(a_tmpca5, 1, tmpca6));
      a_tmpca5 = a_zeros1(tmpca5);
      tmpca6 = adimat_pop1;
      a_bp = adimat_adjsum(a_bp, call(@ifftshift, a_tmpca6));
      a_tmpca6 = a_zeros1(tmpca6);
      [tmpadjc1] = ret_adimat_prepad2(a_bp);
      bp = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc1);
      a_bp = a_zeros1(bp);
      [tmpadjc1] = ret_adimat_postpad2(a_tmpca1);
      tmpca1 = adimat_pop1;
      a_b = adimat_adjsum(a_b, tmpadjc1);
      a_tmpca1 = a_zeros1(tmpca1);
      [tmpda2 tmpda3 ap] = adimat_pop;
      a_ap = a_zeros1(ap);
      tmpda1 = adimat_pop1;
      a_tmpda1 = a_zeros1(tmpda1);
      [tmpda2 tmpda3 bo lb la n b] = adimat_pop;
      a_b_(:) = adimat_adjsum(a_b_(:), a_b);
      a_b = a_zeros1(b);
      a = adimat_pop1;
   end
end

function r = rec_adimat_fftconv(a_, b_, ignored)
   tmpca1 = 0;
   tmpca2 = 0;
   tmpca3 = 0;
   tmpca4 = 0;
   tmpca5 = 0;
   tmpca6 = 0;
   tmpda1 = 0;
   tmpda2 = 0;
   tmpda3 = 0;
   r = 0;
   a = 0;
   b = 0;
   n = 0;
   la = 0;
   lb = 0;
   bo = 0;
   ap = 0;
   bp = 0;
   tmpba1 = 0;
   if isscalar(a_) || isscalar(b_)
      tmpba1 = 1;
      adimat_push1(r);
      r = a_ .* b_;
   else
      adimat_push1(a);
      a = a_(:);
      adimat_push1(b);
      b = b_(:);
      adimat_push1(n);
      n = length(a) + length(b) - 1;
      adimat_push1(la);
      la = length(a);
      adimat_push1(lb);
      lb = length(b);
      adimat_push1(bo);
      bo = mod(la, 2)==1 & mod(lb, 2)==1;
      adimat_push1(tmpda3);
      tmpda3 = lb / 2;
      adimat_push1(tmpda2);
      tmpda2 = ceil(tmpda3);
      adimat_push1(tmpda1);
      tmpda1 = adimat_postpad2(a, la + tmpda2 - 1 - bo);
      adimat_push1(ap);
      ap = adimat_prepad2(tmpda1, n);
      adimat_push1(tmpda3);
      tmpda3 = la / 2;
      adimat_push1(tmpda2);
      tmpda2 = ceil(tmpda3);
      adimat_push1(tmpca1);
      tmpca1 = rec_adimat_postpad2(b, tmpda2 + lb - 1);
      adimat_push1(bp);
      bp = rec_adimat_prepad2(tmpca1, n);
      adimat_push1(tmpca6);
      tmpca6 = fftshift(bp);
      adimat_push1(tmpca5);
      tmpca5 = fft(tmpca6);
      adimat_push1(tmpca4);
      tmpca4 = fftshift(ap);
      adimat_push1(tmpca3);
      tmpca3 = fft(tmpca4);
      adimat_push1(tmpca2);
      tmpca2 = tmpca3 .* tmpca5;
      adimat_push1(tmpca1);
      tmpca1 = ifft(tmpca2);
      adimat_push1(r);
      r = ifftshift(tmpca1);
      tmpba2 = 0;
      if size(b_, 2) > 1
         tmpba2 = 1;
         adimat_push1(r);
         r = r.';
      end
      adimat_push1(tmpba2);
   end
   adimat_push(tmpba1, a, b, n, la, lb, bo, ap, bp, tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpda1, tmpda2, tmpda3, r, a_, b_);
   if nargin > 2
      adimat_push1(ignored);
   end
   adimat_push1(nargin);
end

function a_b_ = ret_adimat_fftconv(a_r)
   tmpnargin = adimat_pop1;
   if tmpnargin > 2
      ignored = adimat_pop1;
   end
   [b_ a_ r tmpda3 tmpda2 tmpda1 tmpca6 tmpca5 tmpca4 tmpca3 tmpca2 tmpca1 bp ap bo lb la n b a] = adimat_pop;
   [a_b a_ap a_bp a_tmpca1 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_tmpda1 a_b_] = a_zeros(b, ap, bp, tmpca1, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpda1, b_);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   tmpba1 = adimat_pop1;
   if tmpba1 == 1
      r = adimat_pop1;
      a_b_ = adimat_adjsum(a_b_, adimat_adjred(b_, a_ .* a_r));
      a_r = a_zeros1(r);
   else
      tmpba2 = adimat_pop1;
      if tmpba2 == 1
         r = adimat_pop1;
         tmpsa1 = a_r;
         a_r = a_zeros1(r);
         a_r = adimat_adjsum(a_r, tmpsa1.');
      end
      r = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, call(@fftshift, a_r));
      a_r = a_zeros1(r);
      tmpca1 = adimat_pop1;
      a_tmpca2 = adimat_adjsum(a_tmpca2, a_ifft(a_tmpca1, 1, tmpca2));
      a_tmpca1 = a_zeros1(tmpca1);
      tmpca2 = adimat_pop1;
      a_tmpca3 = adimat_adjsum(a_tmpca3, adimat_adjred(tmpca3, a_tmpca2 .* tmpca5));
      a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjred(tmpca5, tmpca3 .* a_tmpca2));
      a_tmpca2 = a_zeros1(tmpca2);
      tmpca3 = adimat_pop1;
      a_tmpca4 = adimat_adjsum(a_tmpca4, a_fft(a_tmpca3, 1, tmpca4));
      a_tmpca3 = a_zeros1(tmpca3);
      tmpca4 = adimat_pop1;
      a_ap = adimat_adjsum(a_ap, call(@ifftshift, a_tmpca4));
      a_tmpca4 = a_zeros1(tmpca4);
      tmpca5 = adimat_pop1;
      a_tmpca6 = adimat_adjsum(a_tmpca6, a_fft(a_tmpca5, 1, tmpca6));
      a_tmpca5 = a_zeros1(tmpca5);
      tmpca6 = adimat_pop1;
      a_bp = adimat_adjsum(a_bp, call(@ifftshift, a_tmpca6));
      a_tmpca6 = a_zeros1(tmpca6);
      [tmpadjc1] = ret_adimat_prepad2(a_bp);
      bp = adimat_pop1;
      a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc1);
      a_bp = a_zeros1(bp);
      [tmpadjc1] = ret_adimat_postpad2(a_tmpca1);
      tmpca1 = adimat_pop1;
      a_b = adimat_adjsum(a_b, tmpadjc1);
      a_tmpca1 = a_zeros1(tmpca1);
      [tmpda2 tmpda3 ap] = adimat_pop;
      a_ap = a_zeros1(ap);
      tmpda1 = adimat_pop1;
      a_tmpda1 = a_zeros1(tmpda1);
      [tmpda2 tmpda3 bo lb la n b] = adimat_pop;
      a_b_(:) = adimat_adjsum(a_b_(:), a_b);
      a_b = a_zeros1(b);
      a = adimat_pop1;
   end
end

function [a_a nr_r] = a_adimat_prepad2(a, l, a_r)
   tmpda1 = adimat_first_nonsingleton(a);
   r = rec_adimat_prepad(a, l, 0, tmpda1);
   nr_r = r;
   a_a = a_zeros1(a);
   if nargin < 3
      a_r = a_zeros1(r);
   end
   [tmpadjc1] = ret_adimat_prepad(a_r);
   a_a = adimat_adjsum(a_a, tmpadjc1);
end

function r = rec_adimat_prepad2(a, l)
   tmpda1 = adimat_first_nonsingleton(a);
   r = rec_adimat_prepad(a, l, 0, tmpda1);
   adimat_push(tmpda1, r, a);
   if nargin > 1
      adimat_push1(l);
   end
   adimat_push1(nargin);
end

function a_a = ret_adimat_prepad2(a_r)
   tmpnargin = adimat_pop1;
   if tmpnargin > 1
      l = adimat_pop1;
   end
   [a r tmpda1] = adimat_pop;
   a_a = a_zeros1(a);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   [tmpadjc1] = ret_adimat_prepad(a_r);
   a_a = adimat_adjsum(a_a, tmpadjc1);
end

function [a_a nr_r] = a_adimat_postpad2(a, l, a_r)
   tmpda1 = adimat_first_nonsingleton(a);
   r = rec_adimat_postpad(a, l, 0, tmpda1);
   nr_r = r;
   a_a = a_zeros1(a);
   if nargin < 3
      a_r = a_zeros1(r);
   end
   [tmpadjc1] = ret_adimat_postpad(a_r);
   a_a = adimat_adjsum(a_a, tmpadjc1);
end

function r = rec_adimat_postpad2(a, l)
   tmpda1 = adimat_first_nonsingleton(a);
   r = rec_adimat_postpad(a, l, 0, tmpda1);
   adimat_push(tmpda1, r, a);
   if nargin > 1
      adimat_push1(l);
   end
   adimat_push1(nargin);
end

function a_a = ret_adimat_postpad2(a_r)
   tmpnargin = adimat_pop1;
   if tmpnargin > 1
      l = adimat_pop1;
   end
   [a r tmpda1] = adimat_pop;
   a_a = a_zeros1(a);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   [tmpadjc1] = ret_adimat_postpad(a_r);
   a_a = adimat_adjsum(a_a, tmpadjc1);
end

function [a_a nr_r] = a_adimat_prepad(a, l, c, dim, a_r)
   psz = size(a);
   adimat_push_index1(psz, dim);
   psz(dim) = l - psz(dim);
   pa = repmat(c, psz);
   r = cat(dim, pa, a);
   nr_r = r;
   a_a = a_zeros1(a);
   if nargin < 5
      a_r = a_zeros1(r);
   end
   a_a = adimat_adjsum(a_a, a_cat(a_r, dim, pa, a));
   psz = adimat_pop_index1(psz, dim);
end

function r = rec_adimat_prepad(a, l, c, dim)
   psz = size(a);
   adimat_push_index1(psz, dim);
   psz(dim) = l - psz(dim);
   pa = repmat(c, psz);
   r = cat(dim, pa, a);
   adimat_push(psz, pa, r, a);
   if nargin > 1
      adimat_push1(l);
   end
   if nargin > 2
      adimat_push1(c);
   end
   if nargin > 3
      adimat_push1(dim);
   end
   adimat_push1(nargin);
end

function a_a = ret_adimat_prepad(a_r)
   tmpnargin = adimat_pop1;
   if tmpnargin > 3
      dim = adimat_pop1;
   end
   if tmpnargin > 2
      c = adimat_pop1;
   end
   if tmpnargin > 1
      l = adimat_pop1;
   end
   [a r pa psz] = adimat_pop;
   a_a = a_zeros1(a);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   a_a = adimat_adjsum(a_a, a_cat(a_r, dim, pa, a));
   psz = adimat_pop_index1(psz, dim);
end

function [a_a nr_r] = a_adimat_postpad(a, l, c, dim, a_r)
   psz = size(a);
   adimat_push_index1(psz, dim);
   psz(dim) = l - psz(dim);
   pa = repmat(c, psz);
   r = cat(dim, a, pa);
   nr_r = r;
   a_a = a_zeros1(a);
   if nargin < 5
      a_r = a_zeros1(r);
   end
   a_a = adimat_adjsum(a_a, a_cat(a_r, dim, a));
   psz = adimat_pop_index1(psz, dim);
end

function r = rec_adimat_postpad(a, l, c, dim)
   psz = size(a);
   adimat_push_index1(psz, dim);
   psz(dim) = l - psz(dim);
   pa = repmat(c, psz);
   r = cat(dim, a, pa);
   adimat_push(psz, pa, r, a);
   if nargin > 1
      adimat_push1(l);
   end
   if nargin > 2
      adimat_push1(c);
   end
   if nargin > 3
      adimat_push1(dim);
   end
   adimat_push1(nargin);
end

function a_a = ret_adimat_postpad(a_r)
   tmpnargin = adimat_pop1;
   if tmpnargin > 3
      dim = adimat_pop1;
   end
   if tmpnargin > 2
      c = adimat_pop1;
   end
   if tmpnargin > 1
      l = adimat_pop1;
   end
   [a r pa psz] = adimat_pop;
   a_a = a_zeros1(a);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   a_a = adimat_adjsum(a_a, a_cat(a_r, dim, a));
   psz = adimat_pop_index1(psz, dim);
end
