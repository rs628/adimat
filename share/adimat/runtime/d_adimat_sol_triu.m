% Generated by ADiMat 0.6.0-4788
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2013 Johannes Willkomm <johannes.willkomm@sc.tu-darmstadt.de>
% RWTH Aachen University, 52056 Aachen, Germany
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to adimat-users@lists.sc.informatik.tu-darmstadt.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Flags: FORWARDMODE,  NOOPEROPTIM,
%   NOLOCALCSE,  NOGLOBALCSE,  NOPRESCALARFOLDING,
%   NOPOSTSCALARFOLDING,  NOCONSTFOLDMULT0,  FUNCMODE,
%   NOTMPCLEAR,  DUMP_XML,  PARSE_ONLY,
%   UNBOUND_ERROR
%
% Parameters:
%  - dependents=z
%  - independents=a, b
%  - inputEncoding=ISO-8859-1
%  - output-mode: plain
%  - output-file: ad_out/d_adimat_sol_triu.m
%  - output-file-prefix: 
%  - output-directory: ad_out
%
% Functions in this file: d_adimat_sol_triu
%

function [d_z z] = d_adimat_sol_triu(d_a, a, d_b, b)
   [m n] = size(a);
   assert(m == n);
   tmpda1 = size(b, 2);
   z = zeros(m, tmpda1);
   d_z = d_zeros(z);
   d_z(:, n, :) = adimat_opdiff_ediv(d_b(:, n, :), b(n, :), d_a(:, n, n), a(n, n));
   z(n, :) = b(n, :) ./ a(n, n);
   for i=n - 1:-1:1
      tmpda4 = i + 1;
      tmpda3 = i + 1;
      d_tmpca2 = adimat_opdiff_mult(d_a(:, i, tmpda3 : end), a(i, tmpda3 : end), d_z(:, tmpda4 : end, :), z(tmpda4 : end, :));
      tmpca2 = a(i, tmpda3 : end) * z(tmpda4 : end, :);
      d_tmpca1 = adimat_opdiff_sum(d_b(:, i, :), -d_tmpca2);
      tmpca1 = b(i, :) - tmpca2;
      d_z(:, i, :) = adimat_opdiff_ediv(d_tmpca1, tmpca1, d_a(:, i, i), a(i, i));
      z(i, :) = tmpca1 ./ a(i, i);
   end
end
